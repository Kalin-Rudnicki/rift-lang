
garbage collection:

use reference counting
in order to solve circular reference issues...

...

class AccountHolder
{
	
	String -firstName, -lastName;
	Hash<String, Account> -accounts;
	
	AccountHolder(String firstName, String lastName)
	{
		%(firstName != null);
		%(lastName != null);
		
		#(firstName, lastName);
		this.accounts = Hash<String, Account>.new;
	}
	
	Account addAccount(String accountName)
	{
		%(!this.accounts.key?(accountName));
		
		// Passes this, and receiver saves it, this should be enough to realize a parent/child relation
		// Let it slide? Warning? Automatically do it?
		return this.accounts[accountName] = Account.new(this, accountName);
	}
	
}

class Account
{
	
	AccountHolder -owner;
	String -accountName;
	Integer -balance;
	
	Account(AccountHolder owner, String accountName)
	{
		%(owner != null);
		%(accountName != null);
		
		#(owner, accountName);
		this.balance = 0;
	}
	
}
