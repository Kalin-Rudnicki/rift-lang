
class Person
{
	
	String firstName, lastName;
	Int age;
	Array<Person> friends;
	
	Person(String firstName, String lastName, Int age, Array<Person> friends)
	{
		...
	}
	
}

void addPeople(Person... people)	// void addPeople(var<Person>... people)
void addPeople(^Person... people)	// void addPeople((var<String> firstName, var<String> lastName, var<Int> age, var<Array<Person>> friends)... people)
// Will collect arguments to create person objects
addPeople("Jacoob", "Bill", 21, null, "Kalin", "Rudnicki", 20, null); // => people.length = 2

// How to deal with consecutive...s that might conflict?
	// Int...+ ints -> greedy
	// Int...- ints, -> non-greedy
	// Int... ints, Float... floats
	
// Native
	// Int
	// Float
	// String
	// Symbol
	// Enum
	// Function

// Enums
enum AccountType
{
	CHECKING, SAVINGS;
}

void test(AccountType type) {}
test(AccountType.CHECKING);
test(:CHECKING); // same as above
